[package]
name = "excel-read"
version = "0.1.0"
authors = [
  "lencx <cxin1314@gmail.com>", # 整理
  "郭宇 <guoyumail@qq.com>", # 作者
]
edition = "2018"
description = "浏览器端读取excel"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
#common_uu = {git = "https://gitee.com/guoyucode/common_uu.git"}
serde_json = { version = "*", features = ["preserve_order"] }
calamine = { path = "./calamine" }
base64 = "*"
#calamine = "*"
js-sys = "*"
web-sys = { version = "0.3.50", features = ["FileReader", "FileReaderSync", "Blob", "BlobPropertyBag", "File"]}
wasm-bindgen = { version = "0.2.63",  features = ["serde-serialize"]}
wasm-bindgen-futures = "0.4.23"


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"